name: CI

on:
  # push:
  #   branches:
  #     - '*'
  #     - '!main'  # Exclude 'main' branch
  pull_request:
    branches:
      - 'main'


jobs:
  test:
    runs-on: ubuntu-latest
    environment: test-environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          node-version: '20'

      - name: Set Up Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Set Up Java
        uses: actions/setup-java@v3
        id: setup-java
        with:
          distribution: 'adopt'
          java-version: '17'
          
      - name: Install Dependencies
        run: npm install


      - name: Set Up Firebase
        id: setup-firebase
        if: steps.setup-java.outcome == 'success' && steps.setup-node.outcome == 'success'
        uses: joinflux/firebase-tools@v9.16.0
        with:
          args: emulators:start --only database
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Run Tests
        if: steps.setup-firebase.outcome == 'success'
        run: npm test # test-gh-action
        id: test-result

      - name: Throw Error on Test Failure
        run: |
          if [ ${{ steps.test-result.outcome }} == 'failure' ]; then
            echo "Error: Tests failed. Exiting test execution."
            exit 1
          fi

      - name: Prevent Merge on Test Failure
        run: |
          echo "Error: Tests failed. Merging to main is not allowed."
          exit 1
        if: github.event_name == 'pull_request' && failure()

  failure:
    runs-on: ubuntu-latest
    environment: test-environment
    steps:
      - name: Check for Failed Tests
        run: exit 0  # This step always succeeds; it's used to trigger the 'failure' job